#!/bin/bash
{
	#////////////////////////////////////
	# DietPi Survey Script
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel.knight@dietpi.com / dietpi.com
	#
	#////////////////////////////////////
	#
	# Info:
	# - https://dietpi.com/phpbb/viewtopic.php?f=8&t=20
	# - Sends DietPi statistics to SFTP server (eg: what programs are installed, hardware model)
	# - Allows the DietPi project to focus on areas based on popularity.
	# - No private data is sent. No one can identify you.
	# - Runs on dietpi-update and when users install softwares using dietpi-software
	#
	# Usage:
	# - /DietPi/dietpi/dietpi-survey	Ask user if he/she want to participate to the survey (opting out purge existing survey data,opting in send the report)
	# - /DietPi/dietpi/dietpi-survey 1	Either send survey or an empty file based on user preference stored in .dietpi-survey  
	#
	# File sent format:
	# $(sed -n 5p /DietPi/dietpi/.hw_model).txt
	#////////////////////////////////////

	# Import DietPi-Globals --------------------------------------------------------------
	. /DietPi/dietpi/func/dietpi-globals
	G_PROGRAM_NAME='DietPi-Survey'
	G_CHECK_ROOT_USER
	G_INIT
	# Import DietPi-Globals --------------------------------------------------------------

	EXIT_CODE=1 # 1=failed to send survey, 0=survey sent, 2=opted out and sent

	# Grab Input (valid interger)
	disable_error=1 G_CHECK_VALIDINT "$1" && INPUT=$1 || INPUT=0

	# OPTED_IN default value need to be set to 1 for cases where no user preference exist.
	# It's required to be able to generate a demo file to show to the user before he/she accept to opt-in or not.  
	OPTED_IN=1 # 1=yes | 0=no and purge data
	
	DIETPI_VERSION="$G_DIETPI_VERSION_CORE.$G_DIETPI_VERSION_SUB"
	UNIQUE_ID=$(sed -n 5p /DietPi/dietpi/.hw_model)
	UPLOAD_FILENAME="$UNIQUE_ID.txt"

	SFTP_ADDR='ssh.dietpi.com'
	SFTP_USER='dietpi-survey'
	SFTP_PASS='upload2dietpi'

	FP_SETTINGS='/DietPi/dietpi/.dietpi-survey'

	Write_Settings(){
		echo $OPTED_IN > $FP_SETTINGS; 
	}
	
	Read_Settings(){

		OPTED_IN=$(<$FP_SETTINGS)
		# Force interactive mode if invalid opt value is found
		[[ $OPTED_IN == [01] ]] || INPUT=0

	}

	Generate_File(){

		# Current Git user/branch
		# - For privacy reasons, replace all non-official (MichaIng) branches with "custom"
		local gitbranch="$G_GITOWNER/$G_GITBRANCH"
		[[ $G_GITOWNER != 'MichaIng' ]] && gitbranch='custom'

		# Prevent empty strings, occurred in rare cases
		local network_interface='NONE'
		[[ -f /DietPi/dietpi/.network ]] && network_interface=$(sed -n 3p /DietPi/dietpi/.network)
		local autostart_index=0
		[[ -f /DietPi/dietpi/.dietpi-autostart_index ]] && autostart_index=$(</DietPi/dietpi/.dietpi-autostart_index)

		cat << _EOF_ > $UPLOAD_FILENAME
#!/bin/bash
# -------------------------
((aDIETPI_VERSION[$DIETPI_VERSION]++))
# -------------------------
((aGIT_BRANCH[$gitbranch]++))
((aDEVICE_NAME[$G_HW_MODEL_DESCRIPTION]++))
((aCPU_ARCH[$G_HW_ARCH_DESCRIPTION]++))
((aCPU_COUNT[$G_HW_CPU_CORES]++))
((aDISTRO_VERSION[$G_DISTRO_NAME]++))
((aAUTOSTART_OPTION[\${aAUTOSTART_NAME[$autostart_index]:=$autostart_index}]++))
((aAUTO_SETUP_AUTOMATED[$(grep -m1 -ci '^[[:blank:]]*AUTO_SETUP_AUTOMATED=1' /DietPi/dietpi.txt)]++))
((aNETWORK_INTERFACE[$network_interface]++))
# -------------------------
# DietPi-Software Installed
# -------------------------
_EOF_

		# Add installed software in source-able array format, use DietPi version specific index => name translation:
		if [[ -f '/DietPi/dietpi/.installed' ]]; then

			while read software
			do

				software=${software##*[}
				software=${software%%]*}
				if disable_error=1 G_CHECK_VALIDINT $software; then

					echo "((aSOFTWARE[\${aSOFTWARE_NAME${G_DIETPI_VERSION_CORE}_${G_DIETPI_VERSION_SUB}[$software]:=$software}]++))" >> $UPLOAD_FILENAME

				fi

			done <<< "$(grep ']=2' /DietPi/dietpi/.installed)"

		# - 1st run update/setup
		else

			echo '# 1st run update and setup. /DietPi/dietpi/.installed does not exist at this stage.' >> $UPLOAD_FILENAME

		fi

		# Add benchmark if completed by user
		if [[ -f /var/lib/dietpi/dietpi-benchmark/results ]]; then

			cat /var/lib/dietpi/dietpi-benchmark/results >> $UPLOAD_FILENAME

		fi

	}

	Send_File(){

		local info_failure_msg='Failed to connect to SFTP server. Please try again later. If problems persist, please report this issue to the DietPi dev team (forum or GitHub repo).'

		# Check if we have a working internet connection beforehand
		G_USER_INPUTS=0 G_ERROR_HANDLER_INFO_ONLY=1 G_CHECK_URL "$SFTP_ADDR"
		if (( $G_ERROR_HANDLER_EXITCODE_RETURN == 0 )); then

			if (( $OPTED_IN )); then

				Generate_File

			else

				# Send empty file to overwrite existing data, rm is not possible due to missing file list permissions
				> "$UPLOAD_FILENAME"

			fi

			# Upload to server
			curl --connect-timeout 8 --retry 1 --retry-delay 4 -sT "$UPLOAD_FILENAME" sftp://"$SFTP_USER":"$SFTP_PASS"@"$SFTP_ADDR"/survey/
			if (( $? )); then

				# Silently fail, in case of non-interactive mode
				(( $INPUT )) || G_DIETPI-NOTIFY 1 "$info_failure_msg"

			# Successful upload + opted in
			elif (( $OPTED_IN )); then

				EXIT_CODE=0
				G_DIETPI-NOTIFY 0 'Successfully sent survey data'

			# Successful upload + opted out + interactive
			elif (( ! $INPUT )); then

				EXIT_CODE=2
				G_DIETPI-NOTIFY 0 'Successfully purged survey data'

			fi

		# Silently fail, in case of non-interactive mode
		elif (( ! $INPUT )); then

			G_DIETPI-NOTIFY 1 "$info_failure_msg"

		fi

		Write_Settings

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////

	# Read data from .dietpi-survey file
	if [[ -f $FP_SETTINGS ]]; then

		Read_Settings

	# Force interactive user choice, if no settings file found = no choice made yet
	elif (( $G_USER_INPUTS )); then

		INPUT=0

	fi

	# Input mode: Send survey if opted in or empty file if opted out
	if (( $INPUT == 1 )); then

		Generate_File
		Send_File

	else

		# Generate file to show content on user prompt
		Generate_File

		G_WHIP_DEFAULT_ITEM=$OPTED_IN
		G_WHIP_MENU_ARRAY=(

			'1' ': Opt IN to DietPi-Survey.'
			'0' ': Opt OUT and purge my existing survey data.'

		)

		if G_WHIP_MENU "DietPi-Survey would like to collect anonymous statistics about your hardware, DietPi software and settings. \
This allows us to focus development based on popularity. NO private data will be collected and NO ONE can identify you based on the data. \
The data is sent via secured connection to our SFTP server and is stored there unreadable to the public upload user. \
If you agree, your uploaded data will be automatically updated on every DietPi-Update and DietPi-Software usage. \
The current survey statistics can be reviewed at: https://dietpi.com/survey

Your personal upload file would look like this:
$(<$UPLOAD_FILENAME)

Would you like to join DietPi-Survey?"; then

			OPTED_IN=$G_WHIP_RETURNED_VALUE
			Send_File

		fi

	fi

	#-----------------------------------------------------------------------------------
	exit $EXIT_CODE
	#-----------------------------------------------------------------------------------

}
